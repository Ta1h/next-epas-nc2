generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Question {
  id            String         @id @default(cuid())
  text          String
  choices       Choice[]
  correctAnswer CorrectAnswer?
}

model Choice {
  id            String          @id @default(cuid())
  text          String
  questionId    String
  question      Question        @relation(fields: [questionId], references: [id])
  CorrectAnswer CorrectAnswer[]
}

model CorrectAnswer {
  id         String   @id @default(cuid())
  questionId String   @unique
  question   Question @relation(fields: [questionId], references: [id])
  choiceId   String
  choice     Choice   @relation(fields: [choiceId], references: [id])
  scores     Score[]
}

model Score {
  id              String        @id @default(cuid())
  value           Int
  correctAnswer   CorrectAnswer @relation(fields: [correctAnswerId], references: [id])
  correctAnswerId String
  user            User?         @relation(fields: [userId], references: [id])
  userId          String?
}


model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  username      String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  created       DateTime  @default(now())
  role          Role      @default(USER)
  score         Score[]
  accounts      Account[]
  sessions      Session[]
}

enum Role {
  ADMIN
  USER
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
